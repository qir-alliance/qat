# Disabled until we have a build flow for Windows
#
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: Microsoft C++ Code Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '45 18 * * 1'

env:
  # Path to the CMake build directory.
  build: '${{ github.workspace }}/build'

jobs:
  analyze:
    name: Analyze
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure CMake
        run: cmake -B ${{ env.build }}

      # Build is not required unless generated source files are used
      # - name: Build CMake
      #   run: cmake --build ${{ env.build }}

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@04825f6d9e00f87422d6bf04e1a38b1f3ed60d99
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendedRules.ruleset

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

      # Upload SARIF file as an Artifact to download and view
      # - name: Upload SARIF as an Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: sarif-file
      #     path: ${{ steps.run-analysis.outputs.sarif }}



### ADDITIONAL DISABLED CODE - SAVE FOR LATER: Linux Qiskit tests
      - name: "Running Qiskit tests"
        run: |
          pip install https://github.com/qir-alliance/pyqir/releases/download/v0.2.0a1/pyqir_generator-0.2.0a1-cp36-abi3-linux_x86_64.whl

          git clone git@github.com:msr-quarc/qiskit-qir.git
          pushd qiskit-qir
          pip install -e .
          popd
          export PYTHONPATH=$PWD/qiskit-qir/tests:$PYTHONPATH

          pushd qir/qiskit-tests/
          pip install pytest
          pytest
        env:
          DEBIAN_FRONTEND: noninteractive
          PYTHONUNBUFFERED: 1
          PYTHON_BIN_PATH: /usr/bin/python3
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CC: clang-11
          CXX: clang++-11

