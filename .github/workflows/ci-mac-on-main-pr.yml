name: "macOS CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: macos-11
    name: "Mac CI"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: "Installing dependencies"
        run: |
          rm '/usr/local/bin/2to3'
          brew install llvm@13
          brew install cmake
          brew install python@3.9
          brew unlink python@3.9
          brew install node@16
          brew link python@3.9
          echo "/Users/runner/Library/Python/3.9/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/llvm@13/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/node@16/bin" >> $GITHUB_PATH
          echo "/Users/runner/Library/Python/3.9/lib/python/bin" >> $GITHUB_PATH
          echo "/usr/local/bin/$HOME/bin" >> $GITHUB_PATH
          git submodule update --init --recursive
          pip3 install --user -r requirements.txt
          python3 -c "import autopep8;print(autopep8.__file__)"
          dotnet tool install --global Microsoft.Quantum.IQSharp --version 0.20.2110171573
          npm install -g prettier@2.2.1
          chmod +x manage
          exec -l $SHELL

      - name: "Checking format"
        run: |
          ./manage stylecheck
        env:
          LDFLAGS: "-L/usr/local/opt/llvm@13/lib -Wl,-rpath,/usr/local/opt/llvm@13/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm@13/include"
          CC: clang
          CXX: clang++

      - name: "Running unit tests"
        run: |
          ./manage test
        env:
          LDFLAGS: "-L/usr/local/opt/llvm@13/lib -Wl,-rpath,/usr/local/opt/llvm@13/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm@13/include"
          CC: clang
          CXX: clang++

      - name: "Running Q# tests"
        run: |
          git clone https://github.com/microsoft/Quantum.git
          export QAT_BINARY=${PWD}/Debug/qir/qat/Apps/qat     
          export QSHARP_SAMPLES=${PWD}/Quantum/samples    

          pushd qir/qsharp-tests/
          pip3 install --user pytest
          pytest

      - name: "Running QIR tests"
        run: |
          mkdir -p Debug
          pushd Debug
          cmake ..
          make -j qat
          popd

          export QAT_BINARY=${PWD}/Debug/qir/qat/Apps/qat        
          pip install pytest
          pip install -r requirements.txt
          cd qir/qir-tests/
          pytest
        env:
          DEBIAN_FRONTEND: noninteractive
          PYTHONUNBUFFERED: 1
          PYTHON_BIN_PATH: /usr/bin/python3
          CC: clang-13
          CXX: clang++-13

      - name: "Running Qiskit tests"
        run: |
          git clone https://github.com/microsoft/qiskit-qir.git
          pushd qiskit-qir

          git checkout 111e8149e5ea79c20764c044c454facc5188b2bd

          echo "Installing qiskit qir"
          pip3 install --user -e .
          echo "Done!"
          popd

          export PYTHONPATH=$PWD/qiskit-qir/tests:$PYTHONPATH
          export QAT_BINARY=${PWD}/Debug/qir/qat/Apps/qat     

          pushd qir/qiskit-tests/
          pip3 install --user pytest
          pytest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CC: clang-13
          CXX: clang++-13

      - name: "Running examples"
        run: |
          make test-examples
        env:
          LDFLAGS: "-L/usr/local/opt/llvm@13/lib -Wl,-rpath,/usr/local/opt/llvm@13/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm@13/include"
          CC: clang
          CXX: clang++

      - name: "Performing static analysis"
        run: |
          ./manage lint
        env:
          LDFLAGS: "-L/usr/local/opt/llvm@13/lib -Wl,-rpath,/usr/local/opt/llvm@13/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm@13/include"
          CC: clang
          CXX: clang++
